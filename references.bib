@online{STATISTA_SN_WORLD_USERS,
	author = "{Statista}",
	title = { Number of social network users worldwide from 2010 to 2020 (in billions) },
  date = {2016-06},
  url = { https://www.statista.com/statistics/278414/number-of-worldwide-social-network-users },
	urldate = { 2017-02-04 }
}

@online{WORLD_BANK_POPULATION,
	author = "{World Bank}",
	title = { Population, total },
	date = {n.d.},
  url = {http://data.worldbank.org/indicator/SP.POP.TOTL},
	urldate = { 2017-02-04 }
}

@Online{STATISTA_LEADING_SOCIAL_NETWORKS,
	author= "{Statista}",
	title = { Leading social networks worldwide as of January 2017, ranked by number of active users (in millions) },
  date = {2017-01},
  url = { https://www.statista.com/statistics/272014/global-social-networks-ranked-by-number-of-users/},
	urldate = { 2017-02-04 }
}

@online{TECHNOPEDIA_LIBRARY_DEFINITION,
  author = "{Technopedia}",
  title = {What does Software Library mean?},
  year = {n.d.},
  url = {https://www.techopedia.com/definition/3828/software-library},
  urldate = { 2017-02-16 }
}

@online{TLDP_LIBRARY_DEFINITION,
  author = "{The Linux Documentation Project}",
  title = {Shared Libraries},
  year = {n.d.},
  url = {http://tldp.org/HOWTO/Program-Library-HOWTO/shared-libraries.html},
  urldate = { 2017-02-16}
}

@online{SONARQUBE_MAINTAINABILITY_DEFINITION,
  author ="{SonarQube}",
  title = {Metric Definitions},
  date = {2016-11-21},
  url = {https://docs.sonarqube.org/display/SONAR/Metric+Definitions},
  urldate = {2017-03-04}
}

@article{2998479020080101,
Abstract = {Code reuse is a form of knowledge reuse in software development that is fundamental to innovation in many fields. However, to date there has been no systematic investigation of code reuse in open source software projects. This study uses quantitative and qualitative data gathered from a sample of six open source software projects to explore two sets of research questions derived from the literature on software reuse in firms and open source software development. We find that code reuse is extensive across the sample and that open source software developers, much like developers in firms, apply tools that lower their search costs for knowledge and code, assess the quality of software components, and have incentives to reuse code. Open source software developers reuse code because they want to integrate functionality quickly, because they want to write preferred code, because they operate under limited resources in terms of time and skills, and because they can mitigate development cost},
Author = {Haefliger, Stefan and von Krogh, Georg and Spaeth, Sebastian},
ISSN = {00251909},
Journal = {Management Science},
Keywords = {MANAGEMENT science -- Research, OPEN source software, CODE reuse, COMPUTER software development, KNOWLEDGE management, COMPUTER software, OBJECT-oriented methods (Computer science), REUSABILITY},
Number = {1},
Pages = {180 - 193},
Title = {Code Reuse in Open Source Software.},
Volume = {54},
URL = {https://login.e.bibl.liu.se/login?url=https://search-ebscohost-com.e.bibl.liu.se/login.aspx?direct=true&db=buh&AN=29984790&site=eds-live&scope=site},
Year = {2008},
}

@article{lim1994effects,
  title={Effects of reuse on quality, productivity, and economics},
  author={Lim, Wayne C},
  journal={IEEE software},
  volume={11},
  number={5},
  pages={23--30},
  year={1994},
  publisher={IEEE}
}

@article{griss1993software,
  title={Software reuse: From library to factory},
  author={Griss, Martin L},
  journal={IBM systems journal},
  volume={32},
  number={4},
  pages={548--566},
  year={1993},
  publisher={IBM}
}

@article{Henning:2007:ADM:1255421.1255422,
 author = {Henning, Michi},
 title = {API Design Matters},
 journal = {Queue},
 issue_date = {May-June 2007},
 volume = {5},
 number = {4},
 month = may,
 year = {2007},
 issn = {1542-7730},
 pages = {24--36},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/1255421.1255422},
 doi = {10.1145/1255421.1255422},
 acmid = {1255422},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@inproceedings{raemaekers2012measuring,
  title={Measuring software library stability through historical version analysis},
  author={Raemaekers, Steven and van Deursen, Arie and Visser, Joost},
  booktitle={Software Maintenance (ICSM), 2012 28th IEEE International Conference on},
  pages={378--387},
  year={2012},
  organization={IEEE}
}

@online{CLOUDRAIL,
  title="{Cloudrail}",
  url={https://cloudrail.com/}
}

@online{AGORAVA,
  url={http://www.agorava.org/},
  title="{Agovara}"
}

@online{SOCIALMEDIA-ABSTRACTIONS,
  title="{SocialMedia Abstractions}",
  url={https://github.com/socialsensor/socialmedia-abstractions}
}

@online{ASNE,
  url={https://github.com/gorbin/ASNE},
  title="{ASNE}"
}

@inproceedings{Kiczales:2005:APM:1062455.1062482,
  author = {Kiczales, Gregor and Mezini, Mira},
  title = {Aspect-oriented Programming and Modular Reasoning},
  booktitle = {Proceedings of the 27th International Conference on Software Engineering},
  series = {ICSE '05},
  year = {2005},
  isbn = {1-58113-963-2},
  location = {St. Louis, MO, USA},
  pages = {49--58},
  numpages = {10},
  url = {http://doi.acm.org/10.1145/1062455.1062482},
  doi = {10.1145/1062455.1062482},
  acmid = {1062482},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {aspect-oriented programming, modular reasoning, modularity},
}

@ARTICLE{5733835,
  journal={ISO/IEC/IEEE 24765:2010(E)},
  title={Systems and software engineering -- Vocabulary},
  year={2010},
  pages={1-418},
  keywords={IEEE standards;ISO standards;software engineering;IEEE Computer Society;IEEE Standard Glossary of Software Engineering Terminology;IEEE Std 610.12-1990;International Standard;Project Management Institute;information technology field;systems engineering;Dictionaries;IEC standards;IEEE standards;ISO standards;Software engineering;computer;dictionary;information technology;software engineering;systems engineering;terminology;vocabulary},
  doi={10.1109/IEEESTD.2010.5733835},
  month={12}
}

@inproceedings{rilling2003identifying,
	title={Identifying comprehension bottlenecks using program slicing and cognitive complexity metrics},
	author={Rilling, Juergen and Klemola, Tuomas},
	booktitle={Program Comprehension, 2003. 11th IEEE International Workshop on},
	pages={115--124},
	year={2003},
	organization={IEEE}
}

@online{sonarsourcecodecomplexity,
	title={Cognitive Complexity - A new way of measuring understandability},
	author={G. Ann Campbell},
	year={2017},
	url={https://www.sonarsource.com/docs/CognitiveComplexity.pdf},
	publisher={SonarSource}
}
